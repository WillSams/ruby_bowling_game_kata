///////////////////////////////////////////////////////////////////////////////
// Let's get started:
///////////////////////////////////////////////////////////////////////////////
1.  Execute rspec in the command-line.  You should see '0 examples, 0 failures'

2.  Write your first test checking for the existence of a new game.  Don't create
   the game class yet, we want this to fail without it first.  Then create a blank game class.

require 'spec_helper'
require_relative '../app/game'

describe Game do
  before :each do
    @game = Game.new
  end

  describe "#new" do
      it "takes 0 parameters and returns a Game object" do
          expect(@game).to be_an_instance_of Game
      end
  end
end

2.  Next, let's test the roll() and score() method:
      * roll is called each time the player rolls, taking pins knocked down as an arg.
      * score is called at end of game and returns the total score
    to your spec class
    ------------------
    describe "#roll" do
      it "bowler rolled a straight gutter game" do
        20.times { @game.roll(0) }
        expect(@game.score).to equal 0
      end
    end

    to game class
    --------------
    def roll(pins)
    def

    def score
      return -1  #change to 0 to make this pass
    end

3.  Let's implement the roll/score methods a bit more:
    Add to #roll description
    ------------------------
    describe "#roll" do
      .....

      it "bowler knocked down 1 pin each roll" do
        20.times { @game.roll(1) }
        expect(@game.score).to equal 20
      end
    end

    Add/change in Game class
    -----------------------
    def initialize
      @total_score = 0
    end

    def roll(pins)
       @total_score += pins
    end

    def score
      @total_score
    end
